syntax = "proto3";
package governance.core;

import "falsework/core/common.proto";
import "falsework/core/governance.proto";

option java_multiple_files = true;
option java_package = "com.falsework.governance.generated";
option java_outer_classname = "GovernanceProto";

enum ReplicaAction {
    Cancel = 0;
    Renew = 1;
    Register = 2;
    Change = 3;
}

message InstanceIdentity {
    string instanceId = 1;
    string serviceName = 2;
    string groupName = 3;
}

message BatchTask {
    ReplicaAction action = 1;
    oneof info {
        InstanceIdentity identity = 2;
        RegistryInstanceInfo instance = 3;
        RegistryLeaseInfo lease = 4;
    }
    int64 lastDirtyTimestamp = 5;
}
message BatchTaskReply {
    int32 result = 1;
    RegistryLeaseInfo lease = 2;
}

message RegistryInstanceInfo {
    string instanceId = 1;
    string serviceName = 2;
    string groupName = 3;
    string ipAddress = 4;
    int32 port = 5;
    falsework.governance.InstanceStatus status = 6;
    map<string, string> attributes = 7;
    int64 lastDirtyTimestamp = 8;
}

message RegistryLeaseInfo {
    RegistryInstanceInfo instance = 1;
    int64 duration = 2;
    int64 registrationTimestamp = 3;
    int64 lastUpdateTimestamp = 4;
    int64 evictionTimestamp = 5;
}

message RegistryServiceInfo {
    string serviceName = 1;
    string groupName = 2;
    repeated RegistryLeaseInfo leases = 3;
    int64 lastDirtyTimestamp = 4;
}
message RegistryGroupInfo {
    string groupName = 1;
    repeated RegistryServiceInfo services = 2;
    int64 lastDirtyTimestamp = 3;
}

//查询所有注册节点信息
message RegistryRequest {
    falsework.common.RequestMeta meta = 1;
}
message RegistryResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated RegistryGroupInfo groupInfos = 2;
}

//注册新节点
message RegisterRequest {
    falsework.common.RequestMeta meta = 1;
    RegistryLeaseInfo lease = 2;
}
message RegisterResponse {
    falsework.common.ResponseMeta meta = 1;
}
//取消节点
message CancelRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
}
message CancelResponse {
    falsework.common.ResponseMeta meta = 1;
}
//续约
message RenewRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
    int64 lastDirtyTimestamp = 5;
}
message RenewResponse {
    falsework.common.ResponseMeta meta = 1;
    RegistryLeaseInfo lease = 2;
}
//信息变更
message ChangeRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
    falsework.governance.InstanceStatus status = 7;
    map<string, string> attributes = 8;
    int64 lastDirtyTimestamp = 9;
}
message ChangeResponse {
    falsework.common.ResponseMeta meta = 1;
}

message BatchTaskRequest {
    falsework.common.RequestMeta meta = 1;
    repeated BatchTask batchTasks = 2;

}
message BatchTaskResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated BatchTaskReply replays = 2;
}
service RegistryService {
    rpc fetchRegistry (RegistryRequest) returns (RegistryResponse) {
    }
    rpc register (RegisterRequest) returns (RegisterResponse) {
    }
    rpc cancel (CancelRequest) returns (CancelResponse) {
    }
    rpc renew (RenewRequest) returns (RenewResponse) {
    }
    rpc change (ChangeRequest) returns (ChangeResponse) {
    }
    rpc batch (BatchTaskRequest) returns (BatchTaskResponse) {
    }
}