/*
 * This file is generated by jOOQ.
 */
package com.falsework.census.generated.jooq.tables;


import com.falsework.census.generated.jooq.Indexes;
import com.falsework.census.generated.jooq.Keys;
import com.falsework.census.generated.jooq.Statistics;
import com.falsework.census.generated.jooq.tables.records.MetricsViewsRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * 统计表
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.7"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MetricsViews extends TableImpl<MetricsViewsRecord> {

    private static final long serialVersionUID = 2001623308;

    /**
     * The reference instance of <code>statistics.metrics_views</code>
     */
    public static final MetricsViews METRICS_VIEWS = new MetricsViews();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<MetricsViewsRecord> getRecordType() {
        return MetricsViewsRecord.class;
    }

    /**
     * The column <code>statistics.metrics_views.metric_id</code>. 标识
     */
    public final TableField<MetricsViewsRecord, String> METRIC_ID = createField("metric_id", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "标识");

    /**
     * The column <code>statistics.metrics_views.service_name</code>. 名称
     */
    public final TableField<MetricsViewsRecord, String> SERVICE_NAME = createField("service_name", org.jooq.impl.SQLDataType.VARCHAR(255).nullable(false), this, "名称");

    /**
     * The column <code>statistics.metrics_views.stats</code>. 数据
     */
    public final TableField<MetricsViewsRecord, String> STATS = createField("stats", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "数据");

    /**
     * The column <code>statistics.metrics_views.timestamp</code>. 更新时间
     */
    public final TableField<MetricsViewsRecord, Long> TIMESTAMP = createField("timestamp", org.jooq.impl.SQLDataType.BIGINT.nullable(false), this, "更新时间");

    /**
     * Create a <code>statistics.metrics_views</code> table reference
     */
    public MetricsViews() {
        this(DSL.name("metrics_views"), null);
    }

    /**
     * Create an aliased <code>statistics.metrics_views</code> table reference
     */
    public MetricsViews(String alias) {
        this(DSL.name(alias), METRICS_VIEWS);
    }

    /**
     * Create an aliased <code>statistics.metrics_views</code> table reference
     */
    public MetricsViews(Name alias) {
        this(alias, METRICS_VIEWS);
    }

    private MetricsViews(Name alias, Table<MetricsViewsRecord> aliased) {
        this(alias, aliased, null);
    }

    private MetricsViews(Name alias, Table<MetricsViewsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment("统计表"));
    }

    public <O extends Record> MetricsViews(Table<O> child, ForeignKey<O, MetricsViewsRecord> key) {
        super(child, key, METRICS_VIEWS);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Statistics.STATISTICS;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.METRICS_VIEWS_DX_SV_NM, Indexes.METRICS_VIEWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<MetricsViewsRecord> getPrimaryKey() {
        return Keys.KEY_METRICS_VIEWS_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<MetricsViewsRecord>> getKeys() {
        return Arrays.<UniqueKey<MetricsViewsRecord>>asList(Keys.KEY_METRICS_VIEWS_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricsViews as(String alias) {
        return new MetricsViews(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public MetricsViews as(Name alias) {
        return new MetricsViews(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public MetricsViews rename(String name) {
        return new MetricsViews(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public MetricsViews rename(Name name) {
        return new MetricsViews(name, null);
    }
}
