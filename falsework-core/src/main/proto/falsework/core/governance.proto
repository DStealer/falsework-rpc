syntax = "proto3";

package falsework.governance;

import "falsework/core/common.proto";

option java_multiple_files = true;
option java_package = "com.falsework.core.generated.governance";
option java_outer_classname = "GovernanceProto";

enum InstanceStatus {
    UNKNOWN = 0;
    UP = 1; // Ready to receive traffic
    DOWN = 2; // Do not send traffic- healthcheck callback failed
    STARTING = 3; // Just about starting- initializations to be done
    OUT_OF_SERVICE = 4; // Intentionally shutdown for traffic
}

enum Action {
    ADDED = 0;
    MODIFY = 1;
    DELETED = 2;
}

message InstanceInfo {
    string instanceId = 1;
    string serviceName = 2;
    string groupName = 3;
    string ipAddress = 4;
    int32 port = 5;
    InstanceStatus status = 6;
    map<string, string> attributes = 7;
    string hash = 8;
}

message ServiceInfo {
    string serviceName = 1;
    string groupName = 2;
    repeated InstanceInfo instances = 3;
    string hash = 4;
}

message GroupInfo {
    string groupName = 1;
    repeated ServiceInfo services = 2;
    string hash = 3;
}

//心跳保持
message RenewRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
}

message RenewResponse {
    falsework.common.ResponseMeta meta = 1;
}

//服务注册
message RegisterRequest {
    falsework.common.RequestMeta meta = 1;
    InstanceInfo instance = 2;
}

message RegisterResponse {
    falsework.common.ResponseMeta meta = 1;
}

//服务注销
message CancelRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
}

message CancelResponse {
    falsework.common.ResponseMeta meta = 1;
}

//状态更改
message ChangeRequest {
    falsework.common.RequestMeta meta = 1;
    string instanceId = 2;
    string serviceName = 3;
    string groupName = 4;
    InstanceStatus status = 5;
    map<string, string> attributes = 6;
}

message ChangeResponse {
    falsework.common.ResponseMeta meta = 1;
}

//组查询
message GroupNameRequest {
    falsework.common.RequestMeta meta = 1;
}

message GroupNameResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated string groupNames = 2;
}

//服务查询
message ServiceNameRequest {
    falsework.common.RequestMeta meta = 1;
    string groupName = 2;
}

message ServiceNameResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated string serviceNames = 2;
}

//服务查询
message ServiceRequest {
    falsework.common.RequestMeta meta = 1;
    string serviceName = 2;
    string groupName = 3;
}

message ServiceResponse {
    falsework.common.ResponseMeta meta = 1;
    ServiceInfo serviceInfo = 2;
}

//服务查询
message GroupRequest {
    falsework.common.RequestMeta meta = 1;
    string groupName = 2;
}

message GroupResponse {
    falsework.common.ResponseMeta meta = 1;
    GroupInfo groupInfo = 2;
}

//组变化查询
message DeltaGroupInfo {
    GroupInfo groupInfo = 1;
    Action action = 2;
}

message GroupDeltaRequest {
    falsework.common.RequestMeta meta = 1;
    map<string, string> hashInfos = 2; // 组名,指纹
}

message GroupDeltaResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated DeltaGroupInfo groupInfos = 2;
}

//服务变化查询

message DeltaServiceInfo {
    ServiceInfo serviceInfo = 1;
    Action action = 2;
}

message ServiceDeltaRequest {
    falsework.common.RequestMeta meta = 1;
    string groupName = 2;
    map<string, string> hashInfos = 3;
}
message ServiceDeltaResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated DeltaServiceInfo serviceInfos = 2;
}

//服务所属实例变化查询

message DeltaInstanceInfo {
    InstanceInfo instanceInfo = 1;
    Action action = 2;
}
message InstanceDeltaRequest {
    falsework.common.RequestMeta meta = 1;
    string groupName = 2;
    string serviceName = 3;
    map<string, string> hashInfos = 4;
}
message InstanceDeltaResponse {
    falsework.common.ResponseMeta meta = 1;
    repeated DeltaInstanceInfo instanceInfos = 2;
}

service DiscoveryService {
    rpc renew (RenewRequest) returns (RenewResponse) {
    }
    rpc register (RegisterRequest) returns (RegisterResponse) {
    }
    rpc cancel (CancelRequest) returns (CancelResponse) {
    }
    rpc change (ChangeRequest) returns (ChangeResponse) {
    }
    rpc groupName (GroupNameRequest) returns (GroupNameResponse) {
    }
    rpc serviceName (ServiceNameRequest) returns (ServiceNameResponse) {
    }
    rpc service (ServiceRequest) returns (ServiceResponse) {
    }
    rpc group (GroupRequest) returns (GroupResponse) {
    }
    rpc groupDelta (GroupDeltaRequest) returns (GroupDeltaResponse) {
    }
    rpc serviceDelta (ServiceDeltaRequest) returns (ServiceDeltaResponse) {
    }
    rpc instanceDelta (InstanceDeltaRequest) returns (InstanceDeltaResponse) {
    }
}
